apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: litmus
  generateName: argowf-chaos-
spec:
  entrypoint: argowf-chaos
  serviceAccountName: argo-chaos
  arguments:
    parameters:
      - name: appNamespace
        value: "chaos-app"
      - name: adminModeNamespace
        value: "litmus"
      - name: appLabel
        value: "server"
  templates:
    - name: argowf-chaos
      steps:
        - - name: run-benchmark
            template: run-benchmark
          - name: run-chaos
            template: run-chaos
        - - name: revert-chaos
            template: revert-chaos

    - name: run-chaos
      inputs:
        artifacts:
          - name: run-chaos
            path: /tmp/chaosengine.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: chaos-engine
                  namespace: {{workflow.parameters.adminModeNamespace}}
                spec:
                  appinfo:
                    appns: {{workflow.parameters.appNamespace}}
                    applabel: "app={{workflow.parameters.appLabel}}"
                    appkind: deployment
                  jobCleanUpPolicy: retain
                  monitoring: false
                  annotationCheck: "false"
                  engineState: "active"
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-delete
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "10"
                            - name: CHAOS_INTERVAL
                              value: "5"
                            - name: FORCE
                              value: "false"
      container:
        image: lachlanevenson/k8s-kubectl
        command: [ sh, -c ]
        args: [ 'kubectl apply -f /tmp/chaosengine.yaml -n {{workflow.parameters.adminModeNamespace}} | echo "sleeping for 120s" | sleep 120 ' ]

    - name: run-benchmark
      inputs:
        artifacts:
          - name: run-benchmark
            path: /tmp/bench.yaml
            raw:
              data: |
                apiVersion: batch/v1
                kind: Job
                metadata:
                  namespace: {{workflow.parameters.appNamespace}}
                  labels:
                    app: bench
                  generateName: bench-
                spec:
                  template:
                    metadata:
                      labels:
                        app: bench
                    spec:
                      restartPolicy: Never
                      containers:
                      - args:
                        - -c
                        - /go/bin/main -r -c10 -t${BENCHMARK_DURATION} -n 10000000 http://${SERVER_HOST}:${SERVER_PORT}/; exit 0
                        command:
                        - /bin/sh
                        env:
                          - name: SERVER_HOST
                            value: "server.chaos-app.svc.cluster.local"
                          - name: SERVER_PORT
                            value: "8811"
                          - name: BENCHMARK_DURATION
                            value: "180"
                        image: devth/alpine-bench
                        imagePullPolicy: Always
                        name: bench
      container:
        image: lachlanevenson/k8s-kubectl
        command: [ sh, -c ]
        args: [ 'kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.appNamespace}}' ]

    - name: revert-chaos
      container:
        image: lachlanevenson/k8s-kubectl
        command: [ sh, -c ]
        args: [ ' sleep 20 | kubectl delete chaosengine chaos-engine -n {{workflow.parameters.adminModeNamespace}}' ]
